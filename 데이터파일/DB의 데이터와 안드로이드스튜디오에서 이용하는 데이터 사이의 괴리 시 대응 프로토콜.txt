서버-앱 데이터 불일치 문제 해결 가이드 (Troubleshooting Routine)
"분명히 DB에 데이터가 있는데, 앱에는 아무것도 안 나와요!" 라는 문제는 모든 개발자가 겪는 문제입니다. 이 문제를 해결하는 가장 좋은 방법은 데이터의 흐름을 역순으로 따라가며 범인을 찾는 것입니다.



가장 중요한 것은 다음과 같다.



‘설계도’가 다를 때에는 DB에 맞추는 것이 제일 좋다.

DB, php, java(ex. Coursejava), java(ex.Fragment.java)파일 등이 설계도가 다르면 해결 순서는 다음과 같다.

  2-1. DB 체크

  2-2.  php 체크: php파일은 DB 데이터를 모두 다 받아와야 한다.

  2-3. java(ex. Course.java) 체크: 여기서 안드로이드에서 쓰이는 데이터와 DB의 데이터 간의 괴리를 메운다.

         변수 선언 및 getter와 setter는 안드로이드에서 요구하는 데이터에 맞추되,

         생성자는 DB의 데이터와 맞춘다.

         그리고 this는 안드로이드에서 요구하는 데이터에 맞춘다.

  2-4. java(ex.CourseFragment) 체크: 여기서는 각 데이터 타입에 신경쓰도록 한다.



황금률: 데이터베이스(DB)는 왕이다!
모든 데이터의 기준은 데이터베이스(DB) 테이블 구조입니다. PHP와 안드로이드 앱은 모두 이 DB의 구조에 자신의 코드를 맞춰야 합니다.

1단계: 서버(PHP)가 올바른 데이터를 보내는가?
가장 먼저 확인할 것은 "발신인(PHP)이 올바른 물건(JSON)을 포장해서 보내는가?" 입니다.

▶ 액션 1-1: 웹 브라우저로 PHP 파일 직접 실행하기 (가장 중요)
안드로이드 앱이 서버에 보내는 URL과 똑같은 주소를 PC 웹 브라우저 주소창에 직접 입력하고 Enter를 누릅니다.

http://.../CourseList.php?courseUniversity=학부&courseYear=2025년도...

결과 ①: {"response":[ ... ]} 형태의 데이터가 잘 보일 때

진단: 서버는 완벽하게 정상입니다. 범인은 100% 안드로이드 앱 코드에 있습니다. (▶ 2단계로 이동)

결과 ②: {"response":[]} (빈 배열)이 보일 때

진단: 서버는 정상 작동했지만, DB에 조건과 일치하는 데이터가 하나도 없습니다.

확인 사항:

courseYear=2025년도 처럼 보낸 파라미터 값이 DB에 저장된 값(2025년도)과 완벽히 일치하는지 확인합니다. (띄어쓰기, 대소문자 등)

DB에 정말로 해당 조건의 데이터가 있는지 다시 확인합니다.

결과 ③: HTTP ERROR 500 또는 PHP 오류 메시지가 보일 때

진단: 서버의 PHP 코드 자체에 문법 오류가 있습니다.

확인 사항: mysqli_connect 정보, SELECT 쿼리 문법, 변수 이름 오타($) 등을 확인합니다.

2단계: 앱(Android)이 데이터를 올바르게 받고 처리하는가?
서버가 정상인 것을 확인했다면, 이제 "수신인(안드로이드 앱)이 택배를 잘 받아서 물건을 제대로 진열하는가?"를 확인해야 합니다.

▶ 액션 2-1: Logcat으로 서버가 보낸 원본 데이터 확인하기
AsyncTask의 onPostExecute 메소드 맨 첫 줄에 아래 코드를 추가하여, 서버가 보낸 **날것 그대로의 데이터(result)**를 Logcat에 출력합니다.

단: Logcat에 찍힌 서버 응답과 웹 브라우저에서 봤던 결과가 똑같은지 비교합니다. 만약 Logcat에 null이나 이상한 값이 찍힌다면, 안드로이드의 네트워크 연결 자체에 문제가 있을 수 있습니다. (doInBackground 확인)



▶ 액션 2-2: JSON 파싱 코드와 '설계도' 비교하기


Logcat에 찍힌 원본 데이터와 onPostExecute의 파싱 코드를 한 줄 한 줄 비교합니다.

키(Key) 이름 일치 확인:

서버 응답: "courseTitleKorean": "자료구조"

안드로이드: object.getString("courseTitleKorean");

courseTitleKorean 처럼 키 이름과 대소문자가 완벽하게 일치하는지 확인합니다.

데이터 타입(Type) 일치 확인:

서버 응답: "courseYear": "2025년도" (문자열)

안드로이드: courseYear = object.getString("courseYear");

DB와 Course.java에서 courseYear를 String으로 약속했다면, getString()으로 받는 것이 맞습니다. 만약 getInt()로 받으려고 하면 오류가 발생합니다.



▶ 액션 2-3: 최종 조립 과정 확인하기


Course.java 생성자 확인: new Course(...)에 전달하는 변수의 개수와 순서, 타입이 Course.java 파일에 정의된 생성자와 완벽하게 일치하는지 확인합니다.

어댑터 확인: courseList.add(course);와 adapter.notifyDataSetChanged(); 코드가 정상적으로 호출되는지 확인합니다.

// 액션 2-1 코드

@Override
public void onPostExecute(String result) {
    Log.d("SERVER_RESPONSE", "서버 응답: " + result); // 이 코드를 추가!
    try {
        // ... 기존 파싱 코드 ...
    } catch(Exception e) {
        e.printStackTrace();
    }
}
